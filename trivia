import tkinter as tk
from tkinter import messagebox
import mysql.connector
import random
import time

conexion = mysql.connector.connect(host="localhost", user="root", password="", database="trivia_isaui")
cursor = conexion.cursor()

cursor.execute("SELECT * FROM Preguntas")
preguntas = cursor.fetchall()
random.shuffle(preguntas)

nombre = ""
instagram = ""
current_question = 0
puntaje = 0
start_time = 0
respuesta_correcta = ""

def comenzar_juego():
    global start_time, nombre, instagram
    nombre = nombre_entry.get()
    instagram = instagram_entry.get()

    if nombre.strip() == "" or instagram.strip() == "":
        messagebox.showerror("Error", "Por favor, ingrese su nombre y cuenta de Instagram.")
    else:
        nombre_entry.config(state="disabled")
        instagram_entry.config(state="disabled")
        start_time = time.time()
        mostrar_pregunta()

def mostrar_pregunta():
    global current_question, respuesta_correcta
    if current_question < len(preguntas):
        pregunta_label.config(text=preguntas[current_question][1])
        opciones = [preguntas[current_question][2], preguntas[current_question][3], preguntas[current_question][4], preguntas[current_question][5]]
        random.shuffle(opciones)
        respuesta_correcta = preguntas[current_question][2]

        for i in range(4):
            opcion_labels[i].config(text=opciones[i])
            respuesta_btns[i].config(state="normal")

        current_question += 1 

    else:
        finalizar_juego()





def comprobar_respuesta(respuesta):
    global current_question, puntaje
    if respuesta == respuesta_correcta:
        puntaje += 100

    current_question += 1
    mostrar_pregunta()

    if current_question == len(preguntas):
        finalizar_juego()

def finalizar_juego():
    end_time = time.time()
    tiempo_transcurrido = end_time - start_time

    cursor.execute("INSERT INTO Jugadores (NOMBRE, INSTAGRAM, PUNTAJE, TIEMPO) VALUES (%s, %s, %s, %s)", (nombre, instagram, puntaje, tiempo_transcurrido))
    conexion.commit()

    mostrar_resultados()

def mostrar_resultados():
    resultados_ventana = tk.Toplevel(ventana)
    resultados_ventana.title("Resultados")
    resultados_ventana.geometry("400x400")

    scrollbar = tk.Scrollbar(resultados_ventana)
    scrollbar.pack(side="right", fill="y")

    resultados_text = tk.Text(resultados_ventana, yscrollcommand=scrollbar.set)
    resultados_text.pack(fill="both")

    cursor.execute("SELECT NOMBRE, INSTAGRAM, PUNTAJE, TIEMPO FROM Jugadores ORDER BY TIEMPO")
    resultados = cursor.fetchall()

    resultados_text.insert("1.0", "Nombre\tInstagram\tPuntaje\tTiempo\n")
    for resultado in resultados:
        resultados_text.insert("end", f"{resultado[0]}\t{resultado[1]}\t{resultado[2]}\t{resultado[3]}\n")

    scrollbar.config(command=resultados_text.yview)

    formulario = tk.Frame(resultados_ventana)
    formulario.place(relx=0.5, rely=0.5, anchor="center")

    lbl_nombre = tk.Label(formulario, text="Nombre")
    lbl_nombre.grid(row=0, column=0)

    lbl_instagram = tk.Label(formulario, text="Instagram")
    lbl_instagram.grid(row=0, column=1)

    lbl_puntaje = tk.Label(formulario, text="Puntaje")
    lbl_puntaje.grid(row=0, column=2)

    lbl_tiempo = tk.Label(formulario, text="Tiempo")
    lbl_tiempo.grid(row=0, column=3)

    row = 1
    for resultado in resultados:
        tk.Label(formulario, text=resultado[0]).grid(row=row, column=0)
        tk.Label(formulario, text=resultado[1]).grid(row=row, column=1)
        tk.Label(formulario, text=resultado[2]).grid(row=row, column=2)
        tk.Label(formulario, text=resultado[3]).grid(row=row, column=3)
        row += 1

# Crear la ventana principal
ventana = tk.Tk()
ventana.title("Juego de Preguntas")
ventana.geometry("800x600")

nombre_label = tk.Label(ventana, text="Nombre:")
nombre_label.pack()
nombre_entry = tk.Entry(ventana)
nombre_entry.pack()

instagram_label = tk.Label(ventana, text="Instagram:")
instagram_label.pack()
instagram_entry = tk.Entry(ventana)
instagram_entry.pack()

comenzar_btn = tk.Button(ventana, text="Comenzar", command=comenzar_juego)
comenzar_btn.pack()

# Continuación del código
pregunta_label = tk.Label(ventana, text="", font=("Arial", 16))
pregunta_label.pack()

opcion_labels = []
respuesta_btns = []


    

ventana.mainloop()

